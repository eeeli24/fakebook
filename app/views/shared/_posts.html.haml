- posts.each do |post|
  .post
    .row
      .col.s12
        .card
          .card-content.post-content
            .row
              .col.s1.col-avatar.center-align
                = link_to user_path(post.user) do
                  = image_tag(post.user.avatar(:post), class: 'circle')
              .col.s11
                %span.card-title
                  .row.post-title
                    .col.s9.black-text
                      = link_to "#{post.user.name}:",
                        user_path(post.user), class: 'green-text'
                      - if post.title
                        = post.title
                    .col.s3.right-align
                      %p.small-text.grey-text= post.created_at.strftime('%b %-d at %H:%M')
                %p.left-align.post_body= post.body
                -if post.user == current_user
                  =render_like_text(post) if post.likes.any?
                -else
                  -# Drop a like or unlike link
                  - if post.likers.include?(current_user)
                    = link_to like_path(current_user.likes.find_by(post: post)),
                      method: 'delete' do
                      = render_like_icon(post)
                  - else
                    = link_to likes_path(post_id: post.id), method: 'post' do
                      = render_like_icon(post)
                  = render_like_text(post)
          .card-action.comments
            %ul.collapsible.z-depth-0.comments(data-collapsible='accordion'
                                               style='border: 0')
              %li
                .collapsible-header
                  %i.mdi-communication-comment
                  %p.comments Comments (#{post.comments.count})
                .collapsible-body
                  .row.comments_dropdown
                    = render partial: 'shared/new_comment',
                      locals: { post: post, comment: Comment.new }
                    = render partial: 'shared/comments',
                      locals: { comments: post.comments }
